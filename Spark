spark-shell

val df = spark.read.format("csv").option("header","true").option("header","true").load("s3://assignmentbucket3/Input/DelayedFlights-updated.csv")

df show()

import org.apache.spark.sql.types._
import org.apache.spark.sql.functions._ 

df.createOrReplaceTempView("DelayedFlights")


spark.time {
val results = spark.sql("SELECT Year, avg((CarrierDelay/ArrDelay)*100) FROM DelayedFlights WHERE Year BETWEEN 2003 AND 2010 GROUP BY Year ORDER BY Year ASC").show()
}

spark.time {
val results = spark.sql("SELECT Year, avg((NASDelay/ArrDelay)*100) FROM DelayedFlights WHERE Year BETWEEN 2003 AND 2010 GROUP BY Year ORDER BY Year ASC").show()
}

spark.time {
val results = spark.sql("SELECT Year, avg((WeatherDelay/ArrDelay)*100) FROM DelayedFlights WHERE Year BETWEEN 2003 AND 2010 GROUP BY Year ORDER BY Year ASC").show()
}

spark.time {
val results = spark.sql("SELECT Year, avg((LateAircraftDelay/ArrDelay)*100) FROM DelayedFlights WHERE Year BETWEEN 2003 AND 2010 GROUP BY Year ORDER BY Year ASC").show()
}

spark.time {
val results = spark.sql("SELECT Year, avg((SecurityDelay/ArrDelay)*100) FROM DelayedFlights WHERE Year BETWEEN 2003 AND 2010 GROUP BY Year ORDER BY Year ASC").show()
}

